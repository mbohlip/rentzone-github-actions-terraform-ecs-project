name: Deploy Pipeline

on:
  push:
    branches: [main] # this corresponds to the branch in our github repository

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1
  TERRAFORM_ACTION: apply
  GITHUB_USERNAME: mbohlip
  REPOSITORY_NAME: rentzone-app-codes
  WEB_FILE_ZIP: rentzone.zip
  WEB_FILE_UNZIP: rentzone
  FLYWAY_VERSION: 10.1.0


jobs:
  # Configure AWS credentials 
  configure_aws_credentials: # => this is the job ID
    name: Configure AWS credentials # => name of the job
    runs-on: ubuntu-latest # => the machine that will run the job
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16 # an action already created by someone
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

  # Unlock AWS State file
  unlock_aws_statefile:
    name: Unlock AWS State file
    needs: configure_aws_credentials
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository # this clones our repo on the runner
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.4

      - name: Run Terraform initialize # github commands runs from the root directory
        working-directory: ./iac
        run: terraform init

      - name: Unlock lock state
        run: terraform state lock --unlock --all